{"version":3,"sources":["Projects/FallWellDark.jpg","Projects/FallMan.png","Projects/StairsCycles.jpg","Assets/Pattern-Randomized.svg","BottomWatermark.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BottomWatermark","style","position","width","bottom","left","fontSize","color","right","App","backgroundImage","PatR","backgroundAttachment","Helmet","charSet","blur","min","max","bgImage","FallWell","bgImageAlt","strength","boxShadow","display","placeItems","height","textShadow","zIndex","flexDirection","alignItems","minWidth","textAlign","fontFamily","fontWeight","justifyContent","Stairs","renderLayer","percentage","src","FallMan","alt","transform","opacity","paddingTop","paddingBottom","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,gD,2ICgC5BC,MA9Bf,WACI,OACI,6BACI,yBAAKC,MAAS,CACVC,SAAU,QACVC,MAAO,OACPC,OAAQ,MACRC,KAAM,SAEN,0BAAMJ,MAAS,CAACK,SAAU,MAAOC,MAAO,UAAxC,aAEA,0CAIJ,yBAAKN,MAAS,CACVC,SAAU,QACVC,MAAO,OACPC,OAAQ,MACRI,MAAO,SAEP,0BAAMP,MAAS,CAACK,SAAU,MAAOC,MAAO,UAAxC,eAEA,yC,8EC0FDE,MArGf,WACE,OACE,yBAAKR,MAAS,CAACS,gBAAiB,OAASC,IAAO,IAAKC,qBAAsB,UAEzE,kBAACC,EAAA,EAAD,KACI,0BAAMC,QAAQ,UACd,+DAgBJ,kBAAC,WAAD,CACIC,KAAQ,CAACC,KAAM,EAAGC,IAAK,GACvBC,QAAWC,IACXC,WAAa,GACbC,SAAY,IACZpB,MAAS,CAACqB,UAAW,qEAEvB,yBAAKrB,MAAS,CACZsB,QAAS,OACTC,WAAY,SACZC,OAAQ,QACRlB,MAAO,QACPmB,WAAY,mBACZC,OAAQ,MAER,yBAAK1B,MAAS,CACZsB,QAAS,OACTK,cAAe,SACfC,WAAY,SACZ1B,MAAO,MACP2B,SAAU,QACVC,UAAW,WAEX,0BAAM9B,MAAS,CAAC+B,WAAY,SAAUC,WAAY,MAAO3B,SAAU,QAAnE,eAA6F,6BAC7F,0BAAML,MAAS,CAACgC,WAAY,MAAO3B,SAAU,UAA7C,4BAMN,yBAAKL,MAAS,CACZM,MAAO,QACP0B,WAAY,MACZ3B,SAAU,MACViB,QAAS,OACTW,eAAgB,WAAW,0CAE7B,kBAAC,WAAD,CACEhB,QAAWiB,IACXpB,KAAQ,GACRM,UAAa,IACbpB,MAAS,CAACqB,UAAW,oEACrBc,YAAe,SAAAC,GAAU,OACzB,yBAAKpC,MAAS,CAACE,MAAO,OAAQoB,QAAS,OAAQW,eAAgB,WAC7D,yBAAKI,IAAOC,IAASC,IAAM,GAAGvC,MAAS,CACrC0B,OAAQ,IACRzB,SAAU,QACVuB,OAAQ,OACRrB,OAAQ,KACRqC,UAAU,UAAD,OAAyB,GAAbJ,EAAZ,QACTK,QAAQ,GAAD,OAAK,EAAiB,EAAbL,MAGlB,yBAAKpC,MAAS,CACZ0C,WAAY,OACZC,cAAe,OACfjB,OAAQ,IACRI,UAAW,SACXL,WAAY,mBACZnB,MAAO,QACP0B,WAAY,MACZ3B,SAAU,QAEV,oDAA+B,6BAAK,6BACpC,0CAAqB,6BAAK,6BAC1B,gDAMN,yBAAKL,MAAS,CAAC0B,OAAQ,MACrB,kBAAC,EAAD,SChGYkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAQ,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ad0ef34b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/FallWellDark.60c2c75d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/FallMan.35cf06e2.png\";","module.exports = __webpack_public_path__ + \"static/media/StairsCycles.6c1ce319.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Pattern-Randomized.d6e23a7a.svg\";","import React from 'react'\r\n\r\nfunction BottomWatermark() {\r\n    return (\r\n        <div>\r\n            <div style = {{\r\n                position: 'fixed',\r\n                width: 'auto',\r\n                bottom: '5px',\r\n                left: '10px'\r\n            }}>\r\n                <span style = {{fontSize: '1em', color: 'white'}}>\r\n                Made Using\r\n                <b> React.JS</b>\r\n                </span>\r\n            </div>\r\n\r\n            <div style = {{\r\n                position: 'fixed',\r\n                width: 'auto',\r\n                bottom: '5px',\r\n                right: '10px'\r\n            }}>\r\n                <span style = {{fontSize: '1em', color: 'white'}}>\r\n                Â© Literal\r\n                <b>Wizard</b>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BottomWatermark;","import React from 'react';\n// import styles from './App.css';\n\nimport BottomWatermark from './BottomWatermark'\n// import BGVideo from './BGVideo'\n\nimport FallWell from './Projects/FallWellDark.jpg'\nimport FallMan from './Projects/FallMan.png'\nimport Stairs from './Projects/StairsCycles.jpg'\nimport PatR from './Assets/Pattern-Randomized.svg'\n\nimport { Parallax } from 'react-parallax'\nimport {Helmet} from \"react-helmet\"\n\nfunction App() {\n  return (\n    <div style = {{backgroundImage: 'url(' + PatR + ')', backgroundAttachment: 'fixed'}}>\n\n      <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Mashood Ur Rehman Portfolio</title>\n      </Helmet>\n\n      {/* <div style = {{zIndex: '-1'}}>\n        <BGVideo/>\n      </div> */}\n\n      {/* <div style = {{width: '100%', display: 'flex', justifyContent: 'center'}}>\n        <img src = {FallMan} alt = '' style = {{\n          zIndex: '2',\n          position: 'fixed',\n          height: '30% ',\n          bottom: '5%',\n        }}/>\n      </div> */}\n\n      <Parallax\n          blur = {{min: -1, max: 5}}\n          bgImage = {FallWell}\n          bgImageAlt = ''\n          strength = {500}\n          style = {{boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'}}>\n\n        <div style = {{\n          display: 'grid',\n          placeItems: 'center',\n          height: '100vh',\n          color: 'white',\n          textShadow: '2px 2px 5px #000',\n          zIndex: '0',\n        }}>\n          <div style = {{\n            display: \"flex\",\n            flexDirection: 'column',\n            alignItems: \"center\",\n            width: \"30%\",\n            minWidth: '400px',\n            textAlign: \"center\",\n          }}>\n            <span style = {{fontFamily: 'Oswald', fontWeight: '200', fontSize: '5em'}}>Hello There</span><br/>\n            <span style = {{fontWeight: '400', fontSize: '1.6em'}}>I'm Mashood Ur Rehman</span>\n          </div>\n        </div>\n\n      </Parallax>\n\n      <div style = {{\n        color: 'white',\n        fontWeight: '300',\n        fontSize: '2em',\n        display: 'flex',\n        justifyContent: 'center'}}><span>|  |  |</span></div>\n\n      <Parallax \n        bgImage = {Stairs}\n        blur = {{}}\n        strength = {-300}\n        style = {{boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'}}\n        renderLayer = {percentage => (\n        <div style = {{width: '100%', display: 'flex', justifyContent: 'center'}}>\n          <img src = {FallMan} alt = '' style = {{\n            zIndex: '2',\n            position: 'fixed',\n            height: '30% ',\n            bottom: '5%',\n            transform: `rotate(${percentage * 20}deg)`,\n            opacity: `${1 - percentage * 2}`,\n          }}/>\n\n          <div style = {{\n            paddingTop: '20vh',\n            paddingBottom: '20vh',\n            zIndex: '0',\n            textAlign: 'center',\n            textShadow: '2px 2px 5px #000',\n            color: 'white',\n            fontWeight: '200',\n            fontSize: '2em',\n          }}>\n            <span>Computer Scientist</span><br/><br/>\n            <span>Designer</span><br/><br/>\n            <span>3D Artist</span>\n          </div>\n        </div>\n      )}>\n      </Parallax>\n\n      <div style = {{zIndex: '2'}}>\n        <BottomWatermark/>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}